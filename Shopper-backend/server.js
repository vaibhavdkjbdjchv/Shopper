const express = require('express');
const cors = require('cors');
const multer = require('multer');
const path = require('path');
const fs = require('fs');
const connectDB = require('./db'); // Your DB connection logic

const app = express();
const port = 3000;

// âœ… Ensure uploads folder exists
const uploadsDir = path.join(__dirname, 'uploads');
if (!fs.existsSync(uploadsDir)) {
  fs.mkdirSync(uploadsDir);
}

// âœ… Middleware
app.use(cors());
app.use(express.json());

// âœ… Connect to MongoDB
connectDB();

// âœ… Static folder to serve uploaded images
app.use('/uploads', express.static(uploadsDir));

// âœ… Multer storage config
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, uploadsDir);
  },
  filename: function (req, file, cb) {
    const uniqueName = `${Date.now()}-${file.originalname}`;
    cb(null, uniqueName);
  },
});
const upload = multer({ storage });

// âœ… Upload route (handles form-data)
app.post('/upload', upload.single('image'), (req, res) => {
  if (!req.file) {
    return res.status(400).json({ message: 'No file uploaded' });
  }

  const imageUrl = `http://localhost:${port}/uploads/${req.file.filename}`;
  res.status(200).json({ imageUrl });
});

// âœ… Product-related API routes
const productRoutes = require('./routes/AllProduct');
app.use('/api', productRoutes);

// âœ… Root route
app.get('/', (req, res) => {
  res.send('âœ… Server is up and running!');
});

// âœ… Start the server
app.listen(port, () => {
  console.log(`ðŸš€ Server running at http://localhost:${port}`);
});
